/******************************************************************************/
/*! @addtogroup Group1
    @file       dline_adjustment_mode.h
    @brief      dline adjustment mode header file
    @date       2018/08/27
    @author     Development Dept at Tokyo
    @par        Revision
    $Id$
    @par        Copyright (C)
    2018 Japan Cash Machine Co, Limited. All rights reserved.
*******************************************************************************
    @par        History
    - 2018/08/27 Development Dept at Tokyo
      -# Initial Version
******************************************************************************/

#ifndef _SRC_INCLUDE_ADJUSTMENT_MODE_H_
#define _SRC_INCLUDE_ADJUSTMENT_MODE_H_

#define DEBUG_ADJUSTMENT	1

enum SENSOR_DATA_PHASE_NUMBER
{
	PHASE_SENSOR_DATA_GET_PAPER_AD_MTF			= 0x01,
	PHASE_SENSOR_DATA_GET_NON_PAPER_AD_MTF,		//MTFはこれを使用
	PHASE_SENSOR_DATA_GET_PAPER_WCAD_MTF,
	PHASE_SENSOR_DATA_GET_NON_PAPER_TMPAD_MTF,
};

enum ADJUSTMENT_PHASE_NUMBER
{
	PHASE_ADJUSTMENT_GET_ADJ_PAPER			= 0x11,
	PHASE_ADJUSTMENT_GET_ADJ_NON_PAPER		= 0x12,
	PHASE_ADJUSTMENT_GET_DA					= 0x13,
	PHASE_ADJUSTMENT_GET_TIME				= 0x14,
	PHASE_ADJUSTMENT_GET_AGAIN				= 0x15,
	PHASE_ADJUSTMENT_GET_DGAIN				= 0x16,
	PHASE_ADJUSTMENT_GET_OFFSET				= 0x17,
	PHASE_ADJUSTMENT_GET_BC					= 0x18,
	PHASE_ADJUSTMENT_GET_WC					= 0x19,
	PHASE_ADJUSTMENT_GET_PGA				= 0x1A,

	PHASE_ADJUSTMENT_GET_TMP_PIXEL			= 0x1B,
	PHASE_ADJUSTMENT_GET_TMP_AD				= 0x1C,
	PHASE_ADJUSTMENT_GET_TMP_DA				= 0x1D,
	PHASE_ADJUSTMENT_GET_TMP_TIME			= 0x1E,

	PHASE_ADJUSTMENT_GET_POS_AD				= 0x20,
	PHASE_ADJUSTMENT_GET_POS_DA				= 0x21,
	PHASE_ADJUSTMENT_GET_POS_GAIN			= 0x25,
	PHASE_ADJUSTMENT_GET_POS_ADJ_DA			= 0x26,
	PHASE_ADJUSTMENT_GET_POINT_UV_GAIN		= 0x27,
	PHASE_ADJUSTMENT_GET_POINT_UV_DA		= 0x28,
	PHASE_ADJUSTMENT_GET_POINT_UV_OFFSET	= 0x29,

	PHASE_ADJUSTMENT_GET_SLED				= 0x30,
	PHASE_ADJUSTMENT_GET_TMP_SLED			= 0x31,

//	PHASE_ADJUSTMENT_GET_SIDE_AD			= 0x40,
//	PHASE_ADJUSTMENT_GET_SIDE_DA			= 0x41,
//	PHASE_ADJUSTMENT_GET_SIDE_GAIN			= 0x42,

	PHASE_ADJUSTMENT_GET_MAG_GAIN			= 0x50,
	PHASE_ADJUSTMENT_GET_MAG_ADJ_MAX		= 0x51,
	//PHASE_ADJUSTMENT_GET_MAG_REFAD			= 0x52,
	PHASE_ADJUSTMENT_GET_MAG_ADJ_TMP		= 0x53,
/****************************************************/
	PHASE_ADJUSTMENT_SET_ADJ_PAPER			= 0x91,
	PHASE_ADJUSTMENT_SET_ADJ_NON_PAPER		= 0x92,
	PHASE_ADJUSTMENT_SET_DA					= 0x93,
	PHASE_ADJUSTMENT_SET_TIME				= 0x94,
	PHASE_ADJUSTMENT_SET_AGAIN				= 0x95,
	PHASE_ADJUSTMENT_SET_DGAIN				= 0x96,
	PHASE_ADJUSTMENT_SET_OFFSET				= 0x97,
	PHASE_ADJUSTMENT_SET_BC					= 0x98,
	PHASE_ADJUSTMENT_SET_WC					= 0x99,
	PHASE_ADJUSTMENT_SET_PGA				= 0x9A,

	PHASE_ADJUSTMENT_SET_TMP_PIXEL			= 0x9B,
	PHASE_ADJUSTMENT_SET_TMP_AD				= 0x9C,
	PHASE_ADJUSTMENT_SET_TMP_DA				= 0x9D,
	PHASE_ADJUSTMENT_SET_TMP_TIME			= 0x9E,

//	PHASE_ADJUSTMENT_SET_POS_AD				= 0xA0,
	PHASE_ADJUSTMENT_SET_POS_DA				= 0xA1,
	PHASE_ADJUSTMENT_SET_POS_GAIN			= 0xA2,
	PHASE_ADJUSTMENT_SET_POS_ADJ_DA			= 0xA3,
	PHASE_ADJUSTMENT_SET_POINT_UV_GAIN		= 0xA7,
	PHASE_ADJUSTMENT_SET_POINT_UV_DA		= 0xA8,
	PHASE_ADJUSTMENT_SET_POINT_UV_OFFSET	= 0xA9,

	PHASE_ADJUSTMENT_SET_SLED				= 0xB0,
	PHASE_ADJUSTMENT_SET_TMP_SLED			= 0xB1,

//	PHASE_ADJUSTMENT_SET_SIDE_AD			= 0xC0,
//	PHASE_ADJUSTMENT_SET_SIDE_DA			= 0xC1,
//	PHASE_ADJUSTMENT_SET_SIDE_GAIN			= 0xC2,

	PHASE_ADJUSTMENT_SET_MAG_GAIN			= 0xD0,
	PHASE_ADJUSTMENT_SET_MAG_ADJ_MAX			= 0xD1,
	//PHASE_ADJUSTMENT_SET_MAG_REFAD			= 0xD2,
	PHASE_ADJUSTMENT_SET_MAG_ADJ_TMP		= 0xD3,
};
enum EEPROM_PHASE_NUMBER
{
	PHASE_ADJUSTMENT_GET_DATA_SERIAL		= 0x10,
	PHASE_ADJUSTMENT_GET_FRAM_SUM			= 0x11,
	PHASE_ADJUSTMENT_SET_DATA_SERIAL		= 0x90,

	PHASE_ADJUSTMENT_WRITE_FRAM_INFOMATION			= 0x81,
	PHASE_ADJUSTMENT_WRITE_FRAM_POSITION_VALUE		= 0x82,
	PHASE_ADJUSTMENT_WRITE_FRAM_ADJUSTMENT_VALUE	= 0x83,
	PHASE_ADJUSTMENT_WRITE_FRAM_MOTOR_MODE			= 0x89,
};
enum SAMPLING_PHASE_NUMBER
{
	PHASE_ADJUSTMENT_SAMPLING_ADJ_PAPER			= 0x01,
	PHASE_ADJUSTMENT_SAMPLING_ADJ_NON_PAPER		= 0x02,
	//PHASE_ADJUSTMENT_SAMPLING_BAR				= 0x03,
	//PHASE_ADJUSTMENT_SAMPLING_STRING			= 0x04,
	PHASE_ADJUSTMENT_SAMPLING_TEMPERATURE		= 0x06,
	PHASE_ADJUSTMENT_SAMPLING_AD_PAPER			= 0x07,
	PHASE_ADJUSTMENT_SAMPLING_AD_NON_PAPER		= 0x08,
	PHASE_ADJUSTMENT_SAMPLING_BC_PAPER			= 0x09,
	PHASE_ADJUSTMENT_SAMPLING_BC_NON_PAPER		= 0x0A,

	PHASE_ADJUSTMENT_SAMPLING_ADJ_MAG			= 0x10,

	PHASE_ADJUSTMENT_SAMPLING_PL_ENABLE			= 0xF0,
};
enum TEMPERATURE_PHASE_NUMBER
{
	PHASE_ADJUSTMENT_TEMPERATURE		= 0x01,
};

enum FRAM_INFO_CMD_NUMBER
{
	CMD_FACTRY				= 0x00,
	CMD_MAINTENANCE			= 0x01,
	CMD_READ_FACTRY			= 0x10,
	CMD_READ_MAINTENANCE	= 0x11,
};

enum FRAM_DATA_CMD_NUMBER
{
	CMD_READ	= 0x00,
	CMD_WRITE	= 0x01,
	CMD_ADDRESS	= 0x31,
};

enum ADJUSTMENT_SAMPLING_MODE_CMD_NUMBER
{
	CMD_WITH_PAPER	= 0x31,
	CMD_NO_PAPER	= 0x32,
};
enum FRAM_RES_NUMBER
{
	RES_OK		= 0x00,
};
/************************** PRIVATE FUNCTIONS *************************/
//u8 adjustment_eeprom_rw(void);
u8 sensor_data(void);
u8 adjustment_value(u8 type);
u8 adjustment_sampling(void);
//u8 adjustment_temperature(void);
//u8 adjustment_debug(void);
void front_usb_adjustment_request(void);

#endif/* _SRC_INCLUDE_ADJUSTMENT_MODE_H_ */
/*--- End of File ---*/
